---
modules: 
  - .customincome
---
include:
  - docassemble.MAVirtualCourt:basic-questions.yml
  - docassemble.income:financial_statement.yml
---
objects: 
  - cash: IncomeList.using(there_is_another=False,complete_attribute='type')
---
comment: |
  The metadata section controls the tab title and saved interview title. You can delete this section if you include this YAML file in another YAML file.

metadata:
  title: |
    Massachusetts Rental Voucher Program
  short title: |
    Massachusetts Rental Voucher Program
---
comment: |
  This section is used by MAVirtualCourts to control how some of the questions work.
mandatory: True
code: |
  interview_metadata # make sure we initialize the object
  if not defined("interview_metadata['RentalVoucher']"):
    interview_metadata.initializeObject('RentalVoucher')
  interview_metadata['RentalVoucher'].update({
    'title': 'Massachusetts Rental Voucher Program',
    'short title': 'Massachusetts Rental Voucher Program',
    'description': 'The Massachusetts Rental Voucher Program (MRVP), provides a permanent improvement in the lives of low-income families and individuals by offering rental subsidies to those eligible for the program.',
    'original_form': 'https://www.mass.gov/doc/mrvp-application-form-english/download',
    'allowed courts': [
    ],
    'categories': [
      'Housing',
    ],
    'logic block variable': 'RentalVoucher',
    'attachment block variable': 'RentalVoucher_attachment',
    'typical role': 'plaintiff',
  })
---
features:
  navigation: True
---
sections:
  - review_RentalVoucher: Review your answers
---
id: order block
code: |
  # This is a placeholder to control logic flow in this interview
  basic_questions_intro_screen 
  RentalVoucher_intro
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["RentalVoucher"]["allowed courts"]
  nav.set_section('review_RentalVoucher')
  user_role = 'plaintiff'
  users.target_number = 8
  cash.there_is_another = False
  users.there_is_another = False
  house_count
  same_person_question
  users[0].name.first
  users[0].address.address
  users[0].phone_number
  set_head_household_logic
  set_progress(8.33)
  users[1].name.first # head of household if not the same
  household1_birthdate # head of household 
  if house_count >= 2:
    users[3].name.first and household2_relationship  
  if house_count >= 3: 
    users[4].name.first and household3_relationship
  if house_count >= 4: 
    users[5].name.first and household4_relationship
  if house_count >= 5: 
    users[6].name.first and household5_relationship
  if house_count >= 6: 
    users[7].name.first and household6_relationship
  if house_count >= 7: 
    users[8].name.first and household7_relationship
  set_progress(16.67)
  understand_english
  primary_spoken_language
  primary_written_language
  reside_application
  work_application
  child_school_application
  if special_needs == True:
    special_needs_info
  medical_expense
  ### income 
  if cash.there_are_any: 
    review_cash
  cash.gather()
  set_progress(25.0)
  ### assets
  assets.add_assets
  if assets.there_are_any:
    review_assets
  assets.gather()
  if own_property == True:
    real_estate_address
  set_progress(33.33)
  if sold_property:
    sold_property_assets_answer
  if housing_assistance_previous:
    housing_assistance_agency
    housing_assistance_household_head
    if moveout_date_unknown: 
      housing_assistance_moveout_guess
    moveout_reason
    if assitance_terminated or assitance_backrent: 
      assitance_backrent_explain
  if owe_backrent or previous_evicted: 
    explain_rental_history
  set_progress(41.67)
  sex_offender
  pending_criminal
  convicted_crime
  if sex_offender or pending_criminal or convicted_crime: 
    criminal_record_explination
  if (without_home or immediate_threat) and not_contributed_to_situation and reasonable_efforts and (displaced_resdidence or displaced_current):
    homelessness_displacement
  set_progress(50.0)
  users[2].name.first #emergency contact name 
  users[2].address.address # emergency contact address
  users[2].mobile_number  # emergency contact contact
  user_math_logic
  total_gross_income
  #set_parts(subtitle=str(users))
  #str(users[0])
  set_progress(58.33)
  signature_date
  # Save (anonymized) interview statistics.
  store_variables_snapshot(data={'zip': users[0].address.zip})
  RentalVoucher_preview_question # Pre-canned preview screen
  basic_questions_signature_flow
  users[0].signature
  RentalVoucher = True
---
comment: |
  This question is used to introduce your interview. Please customize
id: Massachusetts Rental Voucher Program
continue button field: RentalVoucher_intro
question: |
  Massachusetts Rental Voucher Program
subquestion: |
  This interview will help you complete an application for the Massachusetts Rental Voucher Program. 
  
  The Massachusetts Rental Voucher Program (MRVP), provides a permanent improvement in the lives of low-income families and individuals by offering rental subsidies to those eligible for the program.
  
  Contact the local housing agency in the area in which you wish to reside to check the status of the agency’s waiting list, open or closed. Applications may be made where waiting lists are open. Not all agencies administer both the Mobile and Project Based programs. Please use the [Service Locator](https://hedfuel.azurewebsites.net/) to find the Local Housing Authority Closest to you.
---
id: basic questions intro screen
question: |
  Massachusetts Rental Voucher Program: Mass Access Project
subquestion: |

  The MassAccess Project can help **Massachusetts residents** complete and download forms in 3 steps:
  
  Step 1. Answer questions that will fill in your form for you.  
  Step 2. Preview the completed form.  
  Step 3. Download and print the final form. You will need to deliver it
  to the court on your own.

  If you do not live in Massachusetts, you may be able to get help for your 
  legal problem from [your local legal aid 
  provider](https://www.lsc.gov/what-legal-aid/find-legal-aid).
  
  Tap the {green words} in any screen for a definition or more information.
  
  If you have questions about this form or the court process, 
  call the Trial Court’s Emergency HelpLine:  
  833-91-COURT (833-912-6878)  
  Monday-Friday  
  8:30am - 4:30pm

  % if chat_partners_available().help:
  Live help is currently available in this interview. Click the speech bubble
  (:comment-alt:) in the navigation bar to connect to a live advocate for help.
  % endif

fields:
  - To continue, you must accept the [terms of use](https://massaccess.suffolklitlab.org/privacy/): acknowledged_information_use
    datatype: checkboxes
    none of the above: False    
    minlength: 1
    choices:
      - I accept the terms of use.
    validation messages:
      minlength: |
        You cannot continue unless you agree to the terms of use.        
continue button field: basic_questions_intro_screen
terms:
  green words: |
    Green words are legal terms or a short way of referring to something that needs more explanation. The definition or explanation pops up when you tap the green words.
right: |
  % if user_has_saved_answers:
  ${fa_icon("bell", color="primary", size="sm")}
  Saved answers available! 
  
  ${action_button_html(url_action('load_answer'), icon="folder-open", label=word("View answers"), size="sm" )}
  % endif  
---
id: Review your form before you sign it
continue button field: RentalVoucher_preview_question
question: |
  Review your form before you sign it
subquestion: |
  Here is a preview of the form you'll sign on the next page. 
  
   ${ pdf_concatenate(RentalVoucher_attachment['preview'], filename='RentalVoucher.pdf')}
---
id: household count
question: | 
  How many people will live in the home?
fields: 
  - People in household: house_count
    datatype: integer
    min: 1
    max: 7 
  - note: |
      This interview can handle a maximum of 7 people 
validation code: |
  if house_count < 2 and house_count > 7:
    validation_error("This interview is set up to handle a maximum household size of 7 individuals")

---
id: name of applicant
question: |
  % if same_person_question:
  What is your name?
  % else: 
  What is the name of the person filling out the application? 
  % endif
fields:
  - First Name: users[0].name.first
  - Middle Name: users[0].name.middle
    required: False
  - Last Name: users[0].name.last
  - Suffix: users[0].name.suffix
    code: |
      name_suffix()
    required: False
---
id: head of household name
question: |
  What is your head of household's name? 
fields:
  - First Name: users[1].name.first
  - Middle Name: users[1].name.middle
    required: False
  - Last Name: users[1].name.last
  - Suffix: users[1].name.suffix
    code: |
      name_suffix()
    required: False  
help: 
  label: What is a head of household? 
  heading: What is a head of household? 
  content: |
    Head of Household – the adult member of the family who is considered to be the head of household for purposes of determining income eligibility and rent. The head of household is responsible for ensuring that the family fulfills all of its responsibilities under MRVP. The family may designate any qualified family member as the head of household. The head of household must have the legal capacity to enter into a lease under state and local law. If the head of household is a student, he or she shall not be considered a full-time student pursuant to the definition above for purposes of calculating exclusions from household income under 760 CMR 49.05. 
---
id: is user head of household 
question: 
  Are you the head of the household? 
fields: 
  - no label: same_person_question
    datatype: yesnoradio
help: 
  label: What is a head of household? 
  heading: What is a head of household? 
  content: |
    Head of Household – the adult member of the family who is considered to be the head of household for purposes of determining income eligibility and rent. The head of household is responsible for ensuring that the family fulfills all of its responsibilities under MRVP. The family may designate any qualified family member as the head of household. The head of household must have the legal capacity to enter into a lease under state and local law. If the head of household is a student, he or she shall not be considered a full-time student pursuant to the definition above for purposes of calculating exclusions from household income under 760 CMR 49.05. 
---
id: head of household = user 
code: | 
  if same_person_question: 
    users[1].name = users[0].name.copy_deep("users[1].name")
  else: 
     users[1].name.first
  set_head_household_logic = True 
---
id: maths 1
code: |
  if house_count == 1:
    users[3].name.first = ' '
    users[3].name.middle = ' ' 
    users[3].name.last = ' ' 
    users[3].name.suffix = ' '
    users[4].name.first = ' '
    users[4].name.middle = ' ' 
    users[4].name.last = ' ' 
    users[4].name.suffix = ' '
    users[5].name.first = ' '
    users[5].name.middle = ' ' 
    users[5].name.last = ' ' 
    users[5].name.suffix = ' '
    users[6].name.first = ' '
    users[6].name.middle = ' ' 
    users[6].name.last = ' ' 
    users[6].name.suffix = ' '
    users[7].name.first = ' '
    users[7].name.middle = ' ' 
    users[7].name.last = ' ' 
    users[7].name.suffix = ' '
    users[8].name.first = ' '
    users[8].name.middle = ' ' 
    users[8].name.last = ' ' 
    users[8].name.suffix = ' '
  if house_count == 2: 
    users[4].name.first = ' '
    users[4].name.middle = ' ' 
    users[4].name.last = ' ' 
    users[4].name.suffix = ' '
    users[5].name.first = ' '
    users[5].name.middle = ' ' 
    users[5].name.last = ' ' 
    users[5].name.suffix = ' '
    users[6].name.first = ' '
    users[6].name.middle = ' ' 
    users[6].name.last = ' ' 
    users[6].name.suffix = ' '
    users[7].name.first = ' '
    users[7].name.middle = ' ' 
    users[7].name.last = ' ' 
    users[7].name.suffix = ' '
    users[8].name.first = ' '
    users[8].name.middle = ' ' 
    users[8].name.last = ' ' 
    users[8].name.suffix = ' '
  if house_count == 3: 
    users[5].name.first = ' '
    users[5].name.middle = ' ' 
    users[5].name.last = ' ' 
    users[5].name.suffix = ' '
    users[6].name.first = ' '
    users[6].name.middle = ' ' 
    users[6].name.last = ' ' 
    users[6].name.suffix = ' '
    users[7].name.first = ' '
    users[7].name.middle = ' ' 
    users[7].name.last = ' ' 
    users[7].name.suffix = ' '
    users[8].name.first = ' '
    users[8].name.middle = ' ' 
    users[8].name.last = ' ' 
    users[8].name.suffix = ' '
  if house_count == 4: 
    users[6].name.first = ' '
    users[6].name.middle = ' ' 
    users[6].name.last = ' ' 
    users[6].name.suffix = ' '
    users[7].name.first = ' '
    users[7].name.middle = ' ' 
    users[7].name.last = ' ' 
    users[7].name.suffix = ' '
    users[8].name.first = ' '
    users[8].name.middle = ' ' 
    users[8].name.last = ' ' 
    users[8].name.suffix = ' '
  if house_count == 5: 
    users[6].name.first = ' '
    users[6].name.middle = ' ' 
    users[6].name.last = ' ' 
    users[6].name.suffix = ' '
    users[7].name.first = ' '
    users[7].name.middle = ' ' 
    users[7].name.last = ' ' 
    users[7].name.suffix = ' '
    users[8].name.first = ' '
    users[8].name.middle = ' ' 
    users[8].name.last = ' ' 
    users[8].name.suffix = ' '
  if house_count == 6: 
    users[8].name.first = ' '
    users[8].name.middle = ' ' 
    users[8].name.last = ' ' 
    users[8].name.suffix = ' '
  user_math_logic = True 
---
id: person 2 
question: |
  What is the name of the next person in your house?
subquestion: | 
  You already told us about ${ users[1].name.first }. 
fields:
  - First Name: users[3].name.first
  - Middle Name: users[3].name.middle
    required: False
  - Last Name: users[3].name.last
  - Suffix: users[3].name.suffix
    code: |
      name_suffix()
    required: False 
---
id: person 3 
question: |
  What is the name of the next person in your house?
subquestion: | 
  You already told us about ${ users[1].name.first } and ${ users[3].name.first }
fields:
  - First Name: users[4].name.first
  - Middle Name: users[4].name.middle
    required: False
  - Last Name: users[4].name.last
  - Suffix: users[4].name.suffix
    code: |
      name_suffix()
    required: False 
---
id: person 4 
question: |
  What is the name of the next person in your house?
subquestion: | 
  You already told us about ${ users[1].name.first }, ${ users[3].name.first } and ${ users[4].name.first }. 
fields:
  - First Name: users[5].name.first
  - Middle Name: users[5].name.middle
    required: False
  - Last Name: users[5].name.last
  - Suffix: users[5].name.suffix
    code: |
      name_suffix()
    required: False  
---
id: person 5
question: |
  What is the name of the next person in your house?
subquestion: |
  You already told us about ${ users[1].name.first }, ${ users[3].name.first }, ${ users[4].name.first } and  ${ users[5].name.first }.
fields:
  - First Name: users[6].name.first
  - Middle Name: users[6].name.middle
    required: False
  - Last Name: users[6].name.last
  - Suffix: users[6].name.suffix
    code: |
      name_suffix()
    required: False  
---
id: person 6
question: |
  What is the name of the next person in your house?
subquestion: | 
  You already told us about ${ users[1].name.first }, ${ users[3].name.first }, ${ users[4].name.first }  ${ users[5].name.first }, and  ${ users[6].name.first }. 
fields:
  - First Name: users[7].name.first
  - Middle Name: users[7].name.middle
    required: False
  - Last Name: users[7].name.last
  - Suffix: users[7].name.suffix
    code: |
      name_suffix()
    required: False  
---
id: person 7
question: |
  What is the name of the next person in your house?
subquestion: |
  You already told us about ${ users[1].name.first }, ${ users[3].name.first }, ${ users[4].name.first }  ${ users[5].name.first },  ${ users[6].name.first }, and ${ users[7].name.first }. 
fields:
  - First Name: users[8].name.first
  - Middle Name: users[8].name.middle
    required: False
  - Last Name: users[8].name.last
  - Suffix: users[8].name.suffix
    code: |
      name_suffix()
    required: False  
---
id: head of household info
question: | 
  Tell us about the head of house household, ${ users[1].name.first }
fields:
  - 'Birthdate': household1_birthdate
    datatype: birthdate
    maxlength: 14
  - 'Sex': household1_sex
    maxlength: 7
  - 'Social Security Number': household1_ssn
    hint: e.g. 123-45-6789
    datatype: ssn
    maxlength: 11
  - 'Racial Designation': household1_race
    help: |
      Responding to this question is **optional**. Your status with respect to tenant selection procedures will not be affected by this information.
    choices: 
      - American Indian: American Indian  
      - Alaska Native: Alaska Native
      - Asian: Asian
      - Black or African American: Black or African American
      - Native Hawaiian : Native Hawaiian
      - Other Pacific Islander: Native Hawaiian Other Pacific Islander
      - White: White
      - Other (specify): Other
    required: False
  - Specify Racial Designation: race1_other 
    show if: 
      variable: household1_race 
      is: Other
    required: False
  - 'Ethnic Designation' : household1_ethnic
    help: |
      Responding to this question is **optional**. Your status with respect to tenant selection procedures will not be affected by this information.
    choices: 
      - Hispanic/Latino: Hispanic /Latino
      - Not Hispanic/Latino: Not Hispanic /Latino
    required: False 
    maxlength: 10
---
id: member 2 
question: | 
  Tell us about ${ users[3].name.first }
fields:
  - 'Relationship to Head of Household': household2_relationship
    hint: e.g. Spouse, child, sibling
  - 'Birthdate': household2_birthdate
    datatype: birthdate
    maxlength: 14
  - 'Sex': household2_sex
    maxlength: 7
  - 'Social Security Number': household2_ssn
    hint: e.g. 123-45-6789
    datatype: ssn
    maxlength: 11
  - 'Racial Designation': household2_race
    help: |
      Responding to this question is **optional**. Your status with respect to tenant selection procedures will not be affected by this information.
    choices: 
      - American Indian: American Indian  
      - Alaska Native: Alaska Native
      - Asian: Asian
      - Black or African American: Black or African American
      - Native Hawaiian : Native Hawaiian
      - Other Pacific Islander: Native Hawaiian Other Pacific Islander
      - White: White
      - Other (specify): Other
    required: False
  - Specify Racial Designation: race2_other 
    show if: 
      variable: household2_race 
      is: Other
    required: False
  - 'Ethnic Designation' : household2_ethnic
    help: |
      Responding to this question is **optional**. Your status with respect to tenant selection procedures will not be affected by this information.
    choices: 
      - Hispanic/Latino: Hispanic /Latino
      - Not Hispanic/Latino: Not Hispanic/Latino
    required: False 
    maxlength: 10
---
id: member 3
question: | 
  Tell us about ${ users[4].name.first }
fields:
  - 'Relationship to Head of Household': household3_relationship
    hint: e.g. Spouse, child, sibling
  - 'Birthdate': household3_birthdate
    datatype: birthdate
    maxlength: 14
  - 'Sex': household3_sex
    maxlength: 7
  - 'Social Security Number': household3_ssn
    hint: e.g. 123-45-6789
    datatype: ssn 
    maxlength: 11
  - 'Racial Designation': household3_race
    help: |
      Responding to this question is **optional**. Your status with respect to tenant selection procedures will not be affected by this information.
    choices: 
      - American Indian: American Indian  
      - Alaska Native: Alaska Native
      - Asian: Asian
      - Black or African American: Black or African American
      - Native Hawaiian : Native Hawaiian
      - Other Pacific Islander: Native Hawaiian Other Pacific Islander
      - White: White
      - Other (specify): Other
    required: False
  - Specify Racial Designation: race3_other 
    show if: 
      variable: household3_race 
      is: Other
  - 'Ethnic Designation' : household3_ethnic
    help: |
      Responding to this question is **optional**. Your status with respect to tenant selection procedures will not be affected by this information.
    choices: 
      - Hispanic/Latino: Hispanic /Latino
      - Not Hispanic/Latino: Not Hispanic/Latino
    required: False 
    maxlength: 10
---
id: member 4
question: | 
  Tell us about ${ users[5].name.first }
fields:
  - 'Relationship to Head of Household': household4_relationship
    hint: e.g. Spouse, child, sibling 
  - 'Birthdate': household4_birthdate
    datatype: birthdate
    maxlength: 14
  - 'Sex': household4_sex
    maxlength: 7
  - 'Social Security Number': household4_ssn
    hint: e.g. 123-45-6789
    datatype: ssn   
    maxlength: 11
  - 'Racial Designation': household4_race
    help: |
      Responding to this question is **optional**. Your status with respect to tenant selection procedures will NOT be affected by this information.
    choices: 
      - American Indian: American Indian  
      - Alaska Native: Alaska Native
      - Asian: Asian
      - Black or African American: Black or African American
      - Native Hawaiian : Native Hawaiian
      - Other Pacific Islander: Native Hawaiian Other Pacific Islander
      - White: White
      - Other (specify): Other
    required: False
  - Specify Racial Designation: race4_other 
    show if: 
      variable: household4_race 
      is: Other
  - 'Ethnic Designation' : household4_ethnic
    help: |
      Responding to this question is **optional**. Your status with respect to tenant selection procedures will not be affected by this information.
    choices: 
      - Hispanic/Latino: Hispanic /Latino
      - Not Hispanic/Latino: Not Hispanic/Latino
    required: False 
    maxlength: 10
---
id: member 5
question: | 
  Tell us about ${ users[6].name.first }
fields:
  - 'Relationship to Head of Household': household5_relationship
    hint: e.g. Spouse, child, siblimg 
  - 'Birthdate': household5_birthdate
    datatype: birthdate
    maxlength: 14
  - 'Sex': household5_sex
    maxlength: 7
  - 'Social Security Number': household5_ssn
    hint: 123-45-6789
    datatype: ssn 
    maxlength: 11
  - 'Racial Designation': household5_race
    help: |
      Responding to this question is **optional**. Your status with respect to tenant selection procedures will NOT be affected by this information.
    choices: 
      - American Indian: American Indian  
      - Alaska Native: Alaska Native
      - Asian: Asian
      - Black or African American: Black or African American
      - Native Hawaiian : Native Hawaiian
      - Other Pacific Islander: Native Hawaiian Other Pacific Islander
      - White: White
      - Other (specify): Other
    required: False
  - Specify Racial Designation: race5_other 
    show if: 
      variable: household5_race 
      is: Other
  - 'Ethnic Designation' : household5_ethnic
    help: |
      Responding to this question is **optional**. Your status with respect to tenant selection procedures will not be affected by this information.
    choices: 
      - Hispanic/Latino: Hispanic /Latino
      - Not Hispanic/Latino: Not Hispanic/Latino
    required: False 
    maxlength: 10
---
id: member 6
question: | 
  Tell us about ${ users[7].name.first }
fields:
  - 'Relationship to Head of Household': household6_relationship
    hint: e.g. Spouse, child, sibling
  - 'Birthdate': household6_birthdate
    datatype: birthdate
    maxlength: 14
  - 'Sex': household6_sex
    maxlength: 7
  - 'Social Security Number': household6_ssn
    hint: 123-45-6789
    datatype: ssn 
    maxlength: 11
  - 'Racial Designation': household6_race
    help: |
      Responding to this question is **optional**. Your status with respect to tenant selection procedures will NOT be affected by this information.
    choices: 
      - American Indian: American Indian  
      - Alaska Native: Alaska Native
      - Asian: Asian
      - Black or African American: Black or African American
      - Native Hawaiian : Native Hawaiian
      - Other Pacific Islander: Native Hawaiian Other Pacific Islander
      - White: White
      - Other (specify): Other
    required: False
  - Specify Racial Designation: race6_other 
    show if: 
      variable: household6_race 
      is: Other
  - 'Ethnic Designation' : household6_ethnic
    help: |
      Responding to this question is **optional**. Your status with respect to tenant selection procedures will not be affected by this information.
    choices: 
      - Hispanic/Latino: Hispanic /Latino
      - Not Hispanic/Latino: Not Hispanic/Latino
    required: False 
    maxlength: 10
---
id: member 7
question: | 
  Tell us about ${ users[8].name.first }
fields:
  - 'Relationship to Head of Household': household7_relationship
    hint: e.g. Spouse, child, sibling 
  - 'Birthdate': household7_birthdate
    datatype: birthdate
    maxlength: 14
  - 'Sex': household7_sex
    maxlength: 7
  - 'Social Security Number': household7_ssn
    hint: e.g. 123-45-6789
    datatype: ssn 
    maxlength: 11
  - 'Racial Designation': household7_race
    help: |
      Responding to this question is **optional**. Your status with respect to tenant selection procedures will NOT be affected by this information.
    choices: 
      - American Indian: American Indian  
      - Alaska Native: Alaska Native
      - Asian: Asian
      - Black or African American: Black or African American
      - Native Hawaiian : Native Hawaiian
      - Other Pacific Islander: Native Hawaiian Other Pacific Islander
      - White: White
      - Other (specify): Other
    required: False
  - Specify Racial Designation: race7_other 
    show if: 
      variable: household7_race 
      is: Other
  - 'Ethnic Designation' : household7_ethnic
    help: |
      Responding to this question is **optional**. Your status with respect to tenant selection procedures will not be affected by this information.
    choices: 
      - Hispanic/Latino: Hispanic /Latino
      - Not Hispanic/Latino: Not Hispanic/Latino
    required: False 
    maxlength: 10
---
id: spoken and written language
question: |
  Do you understand spoken or written English?
yesno: understand_english
---
id: primary spoken language
question: |
  What is your primary spoken language ?
fields:
  - 'no label': primary_spoken_language
    maxlength: 126
---
id: primary written
question: |
  What is your primary written language?
fields:
  - 'no label': primary_written_language
    maxlength: 126
---
id: homeless priority
question: |
  Check any and all that apply to you and your household
fields:
  - 'I am without a place to live': without_home
    datatype: yesnowide
  - 'I am in a living situation with a significant, immediate and direct threat of life or safety that would be fixed by placement in an appropriate unit': immediate_threat
    datatype: yesnowide
  - 'I have not caused or substantially contributed to the situation': not_contributed_to_situation
    datatype: yesnowide
  - 'I made reasonable efforts to prevent or avoid the situation and to locate alternative housing': reasonable_efforts
    datatype: yesnowide
  - 'I am displaced': displaced_current
    datatype: yesnowide
  - 'I am about to be displaced from my primary residence': displaced_resdidence
    datatype: yesnowide
  - 'None of the above' : skip_question
    datatype: yesnowide
    uncheck others: True
---
id: meet homeless definition 
question: | 
  Please select the category below that best describes **why you were displaced**.
subquestion: |
  Based on your answers, you may meet the definition of homeless and may qualify for the priority. Homelessness must be due to one of the categories below to qualify. 
fields: 
  - no label: homelessness_displacement
    input type: radio
    choices: 
      - 'No-fault of applicant like no-faul eviction': displaced_no_fault
      - 'Severe medical emergency': displaced_medical
      - 'Domestic violence': displaced_domestic_violence
      - 'Natural forces like fire, flood, or earchquake': displaced_natural_forces
      - 'Public action like urban renewal or eminent domain': displaced_public_action_1
      - 'Public action like condemnation of your home': displaced_public_action_2 
      - 'None of the above'
---
id: local pref 1 
question: |
  Do you currently **live** in the same city or town that the Local Housing Authority you are applying is located in?
subquestion: | 
  You can use the [Service Locator](https://hedfuel.azurewebsites.net/) to find the Local Housing Authority closest to you.
yesno: reside_application
---
id: local pref 2 
question: |
  Do you currently **work** in the same city or town that the Local Housing Authority you are applying is located in?
subquestion: | 
  You can use the [Service Locator](https://hedfuel.azurewebsites.net/) to find the Local Housing Authority closest to you.
yesno: work_application
---
id: local pref 3
question: | 
  Do you currently **have a child who attends school** in the same city or town that the Local Housing Authority you are applying is located in?
subquestion: | 
  You can use the [Service Locator](https://hedfuel.azurewebsites.net/) to find the Local Housing Authority closest to you.
yesno: child_school_application
---
id: special needs
question: |
  Do you have any special needs due to a disability or need a reasonable accommodation?
yesno: special_needs
---
id: specify special ed info 
question: |
  Specify details about the special needs due to your disability or reasonable accommodation
fields: 
  - 'no label': special_needs_info
    input type: area
    rows: 3
    maxlength: 292
---
id: emergency contact
question: |
  Provide an emergency contact
subquestion: |
  Name of a relative or friend **not planning to live with you.** 
  
  The housing agency may contact your emergency contact if they are unable to reach you in case of an emergency.
fields:
  - 'Your relationship to this person': emergency_contact_relationship
    maxlength: 70
  - First Name: users[2].name.first
  - Middle Name: users[2].name.middle
    required: False
  - Last Name: users[2].name.last
  - Suffix: users[2].name.suffix
    code: |
      name_suffix()
    required: False
---  
id: emergency contact address
question: |
  What is ${ users[2].name }'s address?
subquestion: |
  The housing agency will contact ${ users[2].name} if they are unable to reach you in case of an emergency.
fields:
  - Street address: users[2].address.address
    address autocomplete: True
  - Unit: users[2].address.unit
    required: False
  - City: users[2].address.city
  - State: users[2].address.state
    code: |
      states_list()
    default: MA      
  - Zip: users[2].address.zip
    required: False
---
id: emergency contact contact info 
question: |
  What is ${ users[2].name.first }'s contact information?
subquestion: |
  The housing agency may contact ${ users[2].name} if they are unable to reach you in case of an emergency.
fields:  
  - Mobile number: users[2].mobile_number 
    required: False
  - Other phone number: users[2].phone_number
    required: False
  - Email address: users[2].email    
    datatype: email
    required: False
validation code: |
  if (not showifdef('users[2].phone_number') and \
      (not showifdef('users[2].mobile_number')) and \
      (not showifdef('users[2].email'))):
    validation_error(word("You need to provide at least one contact method."))  
---
id: income type checks 
question: |
  Does anyone in your household have income from any of the following?
subquestion: |
  Include **all** bank accounts, stocks and bond, trusts, real estate, etc. **Do not** include clothing, furniture, or cars. 
fields:
  - no label: cash.cash_types 
    datatype: checkboxes
    code: |
      cash_type_list() 
---
code: |
  cash.there_are_any = cash.cash_types.any_true()
---
#code: |
#  if cash.cash_types.any_true():
#    for type in cash.cash_types.true_values():
#      cash.appendObject(type=type)
#  add_cash = True
---
question: |
  Income from you and your household members
subquestion: |
  So far you've told us about ${cash.number()} income(s).
  You can add more or click continue to go to the next question.
  ${ cash.table }
  ${ cash.add_action() }
field: review_cash
---
id: cash table
table: cash.table
rows: cash
columns:
  - Owner: |
      row_item.earner
  - Type: |
      cash_type_list()[row_item.type]
  -  Gross 12 Months: |
      currency(row_item.gross)
  - Employer: |
      row_item.source  
edit:
  - gross 
---
id: income description
question: |
  Describe the ${ordinal(i)} income before deduction for your household
subquestion: |
  Estimate the gross income anticipated for all household members from all sources for the next 12 months
fields:
    - 'Income type': cash[i].type
      code: |
        cash_type_list()
    - 'Explain what type it is': cash[i].other_type
      show if: 
        variable: cash[i].type
        is: 'Other'
    - 'Household member income': cash[i].earner
      datatype: object_radio
      choices:
        - showifdef('users[1].name') 
        - showifdef('users[3].name')
        - showifdef('users[4].name')
        - showifdef('users[5].name')
        - showifdef('users[6].name')
        - showifdef('users[7].name')
        - showifdef('users[8].name')

    - 'Employer or Source of Income ': cash[i].source
      maxlength: 62
    - 'Gross Income for the next 12 months': cash[i].gross
      datatype: currency
      default: 0
      maxlength: 24
---
id: cash math 
code: | 
  total_gross_income = cash.item(0).gross + cash.item(1).gross + cash.item(2).gross + cash.item(3).gross + cash.item(4).gross + cash.item(5).gross + cash.item(6).gross + cash.item(7).gross + cash.item(8).gross + cash.item(9).gross 
---
id: asset gather import
question: |
  Does anyone in your household own any of the following?
subquestion: |
  Include **all** bank accounts, stocks and bond, trusts, real estate, etc. **Do not** include clothing, furniture, or cars. 
fields:
  - no label: assets.asset_types 
    datatype: checkboxes
    code: |
      asset_type_list()
    exclude: |
      ['vehicle']
---
#if: |
#  not hasattr(assets[i],'type')
id: assets
question: |
  Describe the ${ordinal(i) } asset owned by you and your household members.
fields:
  - What type of asset is it?: assets[i].type
    code: |
      asset_type_list()   
  - Explain what type of asset this is: assets[i].other_type
    show if:
      variable: assets[i].type
      is: 'other'     
  - Owner: assets[i].owner
    datatype: object_radio
    none of the above: False
    choices:
      - showifdef('users[1].name')
      - showifdef('users[3].name')
      - showifdef('users[4].name')
      - showifdef('users[5].name')
      - showifdef('users[6].name')
      - showifdef('users[7].name')
      - showifdef('users[8].name')
  - Asset Value or Current Balance : assets[i].balance
    datatype: currency
    default: 0
  - Name of Financial Institution: assets[i].institution
    maxlength: 38
  - Account Number: assets[i].account
    maxlength: 42
---
id: review assets
question: |
  Assets from you and your household members
subquestion: |
  So far you've told us about ${assets.number()} asset(s).
  You can add more or click continue to go to the next question.
  ${ assets.table }
  ${ assets.add_action() }
field: review_assets
---
id: assets
table: assets.table
rows: assets
columns:
  - Owner: |
      row_item.owner
  - Type: |
      asset_type_list()[row_item.type]
  - Current balance: |
      currency(row_item.balance)
  - Financial Institution: |
      row_item.institution
  - Account Number: |
      row_item.account     
edit:
  - balance
---
id: own prop
question: |
  Do you own any real estate?
yesno: own_property
--- 
id: own prop
question: |
  Provide the address of the real estate you own
fields: 
  - 'no label': real_estate_address
    input type: area
    maxlength: 104
---
id: sold property
question: |
  Have you sold, transfered or given away any real property or assets in the last three years?
yesno: sold_property
---
id: sale property details
question: | 
  Provide the details about the details about transfer of property or assets
fields: 
  - 'Provide the date of sale or transfer': sold_property_assets_answer
    datatype: date
    maxlength: 50
  - 'Property sale amount': property_sale_amount
    datatype: currency 
    maxlength: 13
    default: 0
  - 'Property value amount': property_value_amount
    datatype: currency 
    maxlength: 20
    default: 0
---
id: expenses
question: |
  Estimate the amount you will spend, if any, on the following categories over the next 12 months
fields:
  - 'Un-reimbursed Medical expense': medical_expense
    required: False
    default: 0
    datatype: currency 
    maxlength: 24
  - 'Health insurance': health_insurance
    required: False
    default: 0
    datatype: currency 
    maxlength: 24
  - 'Child care': child_care
    required: False
    default: 0
    datatype: currency 
    maxlength: 24
  - 'Alimony or Child support': child_support
    required: False
    default: 0
    datatype: currency 
    maxlength: 24
  - 'Other home expenses': other_home_expenses
    help: |
      Care of disabled household member or homemaking and travel expenses for disabled household member) 
    required: False
    default: 0
    datatype: currency 
    maxlength: 24
---
id: housing assistance
question: |
  Has anyone in your household ever received housing assitance from MRVP or any other housing agency?
yesno: housing_assistance_previous
---
id: previous agency
question: |
  What was the name of the housing agency you or household member recieved housing assistance from in the past?
fields: 
  - 'Agency name': housing_assistance_agency
    maxlength: 128
--- 
id: previous agency moveout 
question: |
  What date did you or the member of your household who recieved housing assitance in the past moveout? 
fields: 
  - 'I do not know the exact date': moveout_date_unknown
    datatype: yesno
  - 'Moveout date': housing_assistance_moveout
    hide if: moveout_date_unknown
    datatype: date
    maxlength: 128
  - 'Moveout date guess': housing_assistance_moveout_guess
    show if: moveout_date_unknown
    maxlength: 128
---
id: reason moveout 
question: |
  Why did you or members of your household moved out of the household with the prior housing agency?
fields:
  - 'no label': moveout_reason
    input type: area
    rows: 2
    maxlength: 128
---
id: terminated for cause 
question: |
  Were you or any member of your household receiving assistance at the housing agency terminated for cause? 
yesno: assitance_terminated 
--- 
id: backrent 
question: | 
  Do you owe any money, back rent or damages to the housing agency? 
yesno: assitance_backrent
---
id: explain termiated 
question: |
  You said you or a member of your household was terminated for cause and/or owes money, back rent or damages to the housing agency
subquestion: |
  Provide an explaination.
fields: 
  - 'no label': assitance_backrent_explain
    input type: area
    rows: 2
    maxlength: 132
---
id: yes recieved previous assistance - hoh
question: | 
  Name of the head of household at the time you recieved housing assitance from MRVP or any other housing agency in the past
fields: 
  - 'First and Last Name': housing_assistance_household_head
---
id: criminal history
question: |
  Have you or any member of your household ever been convicted of a drug or violent crime?
field: convicted_crime
buttons: 
  - "Yes": True
  - "No / No Record": False 
help:
  label: Can I answer no record? 
  content: |
    An applicant for housing may answer "no record":

    * If you have a sealed record on file with the commissioner of probation  relative to prior arrests, criminal court appearances or convictions;
    
    * If you have with a sealed record on file with the commissioner of probation relative to prior arrests or criminal court appearances;
    
    * If you have a sealed record on file with the commissioner of probation  relative to prior arrests or criminal court appearances
---
id: pending
question: |
  Do you or any member of your household have any criminal matters pending?
field: pending_criminal
buttons: 
  - "Yes": True
  - "No / No Record": False 
help:
  label: Can I answer no record? 
  content: |
    An applicant for housing may answer "no record":

    * If you have a sealed record on file with the commissioner of probation  relative to prior arrests, criminal court appearances or convictions;
    
    * If you have with a sealed record on file with the commissioner of probation relative to prior arrests or criminal court appearances;
    
    * If you have a sealed record on file with the commissioner of probation  relative to prior arrests or criminal court appearances
---
id: registry
question: |
  Do you or any member of your household have a lifetime requirement to register as a sex offender in the state of Massachusetts?
field: sex_offender
buttons: 
  - "Yes": True
  - "No / No Record": False 
help:
  label: Can I answer no record? 
  content: |
    An applicant for housing may answer "no record":

    * If you have a sealed record on file with the commissioner of probation  relative to prior arrests, criminal court appearances or convictions;
    
    * If you have with a sealed record on file with the commissioner of probation relative to prior arrests or criminal court appearances;
    
    * If you have a sealed record on file with the commissioner of probation  relative to prior arrests or criminal court appearances
---
id: criminal record explanation
question: | 
  You answered **yes** to at least one question regarding a criminal record for you or a member of your household. [BR] Provide an explination. 
subquestion: | 
  The questions were:
  
  * Have you or any member of your household ever been convicted of a drug or violent crime?
  * Do you or any member of your household have any criminal matters pending?
  * Do you or any member of your household have a lifetime requirement to register as a sex offender in the state of Massachusetts?
fields: 
  - 'no label': criminal_record_explination
    maxlength: 154
    input type: area
    rows: 2
---
id: rental history 1
question: |
  Do you owe any previous property owner money for damagers or unpaid rent? 
yesno: owe_backrent
--- 
id: rental history 2 
question: | 
  Have you ever been evicted from a rental unit for cause? 
yesno: previous_evicted 
---
id: explain rental history
question: | 
  If you owe any previous property owner money for damagers or unpaid rent or were evicted from a rental unit for cause, explain below.
fields: 
  - 'Explain rental history': explain_rental_history
    input type: area
    rows: 2
    maxlength: 152
---
id: your address
question: |
  What is your address?
subquestion: |
  What address should the housing agency use to mail papers to you?
fields:
  - Street address: users[0].address.address
    address autocomplete: True
  - Unit: users[0].address.unit
    required: False
  - City: users[0].address.city
  - State: users[0].address.state
    code: |
      states_list()
    default: MA      
  - Zip: users[0].address.zip
    required: False
---
question: |
  What is your contact information?
subquestion: |
  The housing agency needs to be able to reach you.
  
  Include at least **one** way to reach you other than by mail.
fields:  
  - Mobile number: users[0].mobile_number
    required: False
  - Other phone number: users[0].phone_number
    required: False
  - Email address: users[0].email    
    datatype: email
    required: False
    help: |
      If you do not have a phone number or email the housing agency can use, provide
      specific contact instructions. For example, use a friend's phone number.
      But the friend must be someone you can rely on to tell you the housing agency is trying to reach you.
validation code: |
  if (not showifdef('users[0].phone_number')) and \
      (not showifdef('users[0].mobile_number')) and \
      (not showifdef('users[0].email')):
    validation_error(word("You need to provide at least one contact method."))
help: |
  The court **must** be able to reach you. So you have to give them some way to do this.
  
  Some forms allow you to tell the court you need to keep your address, phone,
  and email confidential, so that only court staff can see this information. 
---
progress: 100
mandatory: True
id: Your form is ready to download
question: |
  Your form is ready to download and file
subquestion: |
  Thank you ${users[0].name}. Your form is ready to download. Below is a preview of your form.
  
  Next steps:
  
    Contact the local housing agency in the area in which you wish to reside to check the status of the agency’s waiting list, open or closed. Applications may be made where waiting lists are open. Not all agencies administer both the Mobile and Project Based programs. Please use the [Service Locator](https://hedfuel.azurewebsites.net/) to find the Local Housing Authority Closest to you.

  ${pdf_concatenate(RentalVoucher_attachment['final'], filename='RentalVoucher.pdf') }

need: RentalVoucher
attachment code: RentalVoucher_attachment['final']
---
objects:
  - RentalVoucher_attachment: DADict
---
id: attachment block
attachment:
    variable name: RentalVoucher_attachment[i]
    name: Massachusetts Rental Voucher Program
    filename: Massachusetts_Rental_Voucher_Program
    skip undefined: True
    pdf template file: MRV.pdf
    fields: 
      - "user0_name": ${ str(users[0]) }
      - "user0_address_street": ${ users[0].address.address }
      - "user0_address_street2": ${ users[0].address.unit }
      - "user0_address_city": ${ users[0].address.city }
      - "user0_address_state": ${ users[0].address.state }
      - "user0_address_zip": ${ users[0].address.zip }
      - "user0_phone_number": ${ users[0].phone_number }
      - "user0_mobile": ${ users[0].mobile_number }
      - "user0_email": ${ users[0].email }
      # If it is a signature, test which file version we're expecting. leave it empty unless it's the final attachment version
      
      - "household1_ethnic": ${ household1_ethnic }
      - "household1_race": |
          % if household1_race == 'Other': 
          ${ race1_other }
          % else:
          ${ household1_race }
          % endif
# head of household 
      - "user1_name__1": ${ str(users[1]) }
      - "household1_birthdate": ${format_date(household1_birthdate, format='MM/dd/yyyy')  }
      - "household1_sex": ${ household1_sex }
      - "household1_ssn": ${ household1_ssn }
# person 2 
      - "user2_name__1": |
          % if house_count >= 2:
          ${ str(users[3]) }
          % endif
      - "household2_birthdate": ${format_date(household2_birthdate, format='MM/dd/yyyy')  }
      - "household2_relationship": ${ household2_relationship }
      - "household2_ethnic": ${ household2_ethnic }
      - "household2_sex": ${ household2_sex }
      - "household2_ssn": ${ household2_ssn }
      - "household2_race": |
          % if household2_race == 'Other': 
          ${ race2_other }
          % else:
          ${ household2_race }
          % endif
# person 3
      - "user3_name__1": |
          % if house_count >= 3:
          ${ str(users[4]) }
          % endif
      - "household3_birthdate": ${format_date(household3_birthdate, format='MM/dd/yyyy')  }
      - "household3_relationship": ${ household3_relationship }
      - "household3_ethnic": ${ household3_ethnic }
      - "household3_sex": ${ household3_sex }
      - "household3_ssn": ${ household3_ssn }
      - "household3_race": |
          % if household3_race == 'Other': 
          ${ race3_other }
          % else:
          ${ household3_race }
          % endif
# person 4
      - "user4_name__1": |
          % if house_count >= 4:
          ${ str(users[5]) }
          % endif
      - "household4_ethnic": ${ household4_ethnic }
      - "household4_relationship": ${ household4_relationship }
      - "household4_race": |
          % if household4_race == 'Other': 
          ${ race4_other }
          % else:
          ${ household4_race }
          % endif
      - "household4_sex": ${ household4_sex }
      - "household4_ssn": ${ household4_ssn }
      - "household4_birthdate": ${format_date(household4_birthdate, format='MM/dd/yyyy')  }
# person 5
      - "user5_name__1": |
          % if house_count >= 5:
          ${ str(users[6]) }
          % endif
      - "household5_ethnic": ${ household5_ethnic }
      - "household5_relationship": ${ household5_relationship }
      - "household5_race": |
          % if household5_race == 'Other': 
          ${ race5_other }
          % else:
          ${ household5_race }
          % endif
      - "household5_sex": ${ household5_sex }
      - "household5_ssn": ${ household5_ssn }
      - "household5_birthdate": ${format_date(household5_birthdate, format='MM/dd/yyyy')  }
# person 6
      - "user6_name__1": |
          % if house_count >= 6:
          ${ str(users[7]) }
          % endif
      - "household6_ethnic": ${ household6_ethnic }
      - "household6_sex": ${ household6_sex }
      - "household6_relationship": ${ household6_relationship }
      - "household6_ssn": ${ household6_ssn }
      - "household6_race": |
          % if household6_race == 'Other': 
          ${ race6_other }
          % else:
          ${ household6_race }
          % endif
      - "household6_birthdate": ${format_date(household6_birthdate, format='MM/dd/yyyy')  }
# person 7 
      - "user7_name__1": |
          % if house_count >= 7:
          ${ str(users[8]) }
          % endif
      - "household7_birthdate": ${format_date(household7_birthdate, format='MM/dd/yyyy')  }
      - "household7_sex": ${ household7_sex }
      - "household7_ssn": ${ household7_ssn }
      - "household7_relationship": ${ household7_relationship }
      - "household7_ethnic": ${ household7_ethnic }
      - "household7_race": |
          % if household7_race == 'Other': 
          ${ race7_other }
          % else:
          ${ household7_race }
          % endif
      - "no_understand_english": ${ not understand_english }
      - "yes_understand_english": ${ understand_english }
      - "primary_spoken_language": ${ primary_spoken_language }
      - "primary_written_language": ${ primary_written_language }
      - "immediate_threat": ${ without_home or immediate_threat }
      - "not_contributed_to_situation": ${ not_contributed_to_situation }
      - "reasonable_efforts": ${ reasonable_efforts }
      - "displaced_resdidence": ${ displaced_resdidence }
      - "displaced_no_fault": ${ homelessness_displacement == 'displaced_no_fault' }
      - "displaced_medical": ${ homelessness_displacement ==  'displaced_medical' }
      - "displaced_domestic_violence": ${ 'displaced_domestic_violence' }
      - "displaced_natural_forces": ${ homelessness_displacement == 'displaced_natural_forces' }
      - "displaced_public_action_1": ${ homelessness_displacement == 'displaced_public_action_1' }
      - "displaced_public_action_2": ${ homelessness_displacement == 'displaced_public_action_2' }
      - "reside_application_town_yes": ${ reside_application }
      - "reside_application_town_no": ${ not reside_application }
      - "work_application_town_yes": ${ work_application }
      - "work_application_town_no": ${ not work_application }
      - "child_school_application_town_yes": ${ child_school_application }
      - "child_school_application_town_no": ${ not child_school_application }
      - "special_needs_yes": ${ special_needs }
      - "special_needs_no": ${ not special_needs } 
      - "special_needs_info": | 
          % if not special_needs: 
          ${ 'N/A' }
          % else: 
          ${ special_needs_info }
          % endif
#emergency contact
      - "emergency_contact": ${ str(users[2]) }
      - "emergency_contact_relationship": ${ emergency_contact_relationship }
      - "user1_address_street": ${ users[2].address.address }
      - "user1_address_street2": ${ users[2].address.unit }
      - "user1_address_city": ${ users[2].address.city }
      - "user1_address_state": ${ users[2].address.state }
      - "user1_address_zip": ${ users[2].address.zip }
      - "emergency_mobile": ${ users[2].mobile_number }
      - "emergency_phone": ${ users[2].phone_number }
      - "emergency_email": ${ users[2].email  }
      - "household1_gross": ${ cash.item(0).gross }
      - "household1_employed": |
          % if not cash.item(0): 
          ${ 'No household income' }
          % else: 
          ${ cash[0].earner }
          % endif 
      - "household1_employer": ${ cash.item(0).source }
      - "household2_gross": ${ cash.item(1).gross }
      - "household2_employed": ${ cash[1].earner }
      - "household2_employer": ${ cash.item(1).source }
      - "household3_gross": ${ cash.item(2).gross }
      - "household3_employed": ${ cash[2].earner }
      - "household3_employer": ${ cash.item(2).source }
      - "household4_gross": ${ cash.item(3).gross }
      - "household4_employed": ${ cash[3].earner }
      - "household4_employer": ${ cash.item(3).source }
      - "household5_gross": ${ cash.item(4).gross }
      - "household5_employed": ${ cash[4].earner }
      - "household5_employer": ${ cash.item(4).source }
      - "household6_gross": ${ cash.item(5).gross }
      - "household6_employed": ${ cash[5].earner }
      - "household6_employer": ${ cash.item(5).source }
      - "household7_gross": ${ cash.item(6).gross }
      - "household7_employed": ${ cash[6].earner }
      - "household7_employer": ${ cash.item(6).source }
      - "household8_gross": ${ cash.item(7).gross }
      - "household8_employed": ${ cash[7].earner }
      - "household8_employer": ${ cash.item(7).source }
      - "household9_gross": ${ cash.item(8).gross }
      - "household9_employed": ${ cash[8].earner }
      - "household9_employer": ${ cash.item(8).source }
      - "household10_gross": ${ cash.item(9).gross }
      - "household10_employed": ${ cash[9].earner }
      - "household10_employer": ${ cash.item(9).source }
      - "total_gross_income": ${ currency(total_gross_income) }
      - "asset_1": | 
          % if not assets.item(0): 
          ${ 'N/A' }
          % else: 
          ${ assets.item(0).type }
          % endif 
      - "asset_value_1": |
          % if not assets.item(0): 
          ${ 'N/A' }
          % else: 
          ${ assets.item(0).balance  }
          % endif 
      - "financial_institution_1": |
          % if not assets.item(0): 
          ${ 'N/A' }
          % else: 
          ${ assets.item(0).institution }
          % endif 
      - "account_number_1": |
          % if not assets.item(0): 
          ${ 'N/A' }
          % else: 
          ${ assets.item(0).account }
          % endif 
      - "asset_value_2": ${ assets.item(1).balance  }
      - "household_with_asset_1": |
          % if not assets.item(0): 
          ${ 'N/A' }
          % else: 
          ${ assets[0].owner } 
          % endif 
      - "asset_2": ${  assets.item(1).type }
      - "account_number_2": ${ assets.item(1).account  }
      - "financial_institution_2": ${ assets.item(1).institution }
      - "household_with_asset_2": ${ assets[1].owner }
      - "asset_value_3": ${ assets.item(2).balance  }
      - "asset_3": ${  assets.item(2).type }
      - "account_number_3": ${ assets.item(2).account  }
      - "financial_institution_3": ${ assets.item(2).institution }
      - "household_with_asset_3": ${ assets[2].owner }
      - "account_number_4": ${ assets.item(3).account  }
      - "household_with_asset_4": ${ assets[3].owner }
      - "asset_value_4": ${ assets.item(3).balance }
      - "financial_institution_4": ${ assets.item(3).institution }
      - "asset_4": ${ assets.item(3).type }
      - "own_property_yes": ${ own_property }
      - "own_property_no": ${ not own_property }
      - "real_estate_address": | 
          % if not own_property: 
          ${ 'N/A' }
          % else: 
          ${ real_estate_address }
          % endif
      - "sold_property_assets_no": ${ not sold_property }
      - "sold_property_assets_yes": ${ sold_property }
      - "sold_property_assets_answer": | 
          % if not sold_property: 
          ${ 'N/A' }
          % else: 
          ${ format_date(sold_property_assets_answer, format='MM/dd/yyyy') }
          % endif
      - "property_sale_amount": |
          % if not sold_property: 
          ${ 'N/A' }
          % else: 
          ${ property_sale_amount } 
          % endif
      - "property_value_amount": |
          % if not sold_property: 
          ${ 'N/A' }
          % else: 
          ${ property_value_amount }
          % endif
      - "medical_expense": ${ medical_expense }
      - "child_care": ${ child_care }
      - "health_insurance": ${ health_insurance }
      - "other_home_expenses": ${ other_home_expenses }
      - "child_support": ${ child_support }
      - "housing_assistance_yes": ${ housing_assistance_previous }
      - "housing_assistance_no": ${ not housing_assistance_previous }
      - "housing_assistance_household_head": | 
          % if not housing_assistance_previous: 
          ${ 'N/A' } 
          % else: 
          ${ housing_assistance_household_head }
          % endif 
      - "housing_assistance_agency": |
          % if not housing_assistance_previous: 
          ${ 'N/A' } 
          % else: 
          ${ housing_assistance_agency }
          % endif 
      - "housing_assistance_moveout": | 
          % if not housing_assistance_previous:
          ${ 'N/A' }
          % elif moveout_date_unknown: 
          ${ housing_assistance_moveout_guess }
          % else: 
          ${ format_date(housing_assistance_moveout, format='MM/dd/yyy') }  
          % endif
      - "moveout_reason": | 
          % if not housing_assistance_previous: 
          ${ 'N/A' } 
          % else: 
          ${ moveout_reason }
          % endif 
      - "assitance_backrent_yes": ${ assitance_backrent }
      - "assitance_backrent_no": ${ not assitance_backrent }
      - "assitance_terminated_no": ${ not assitance_terminated }
      - "assitance_terminated_yes": ${ assitance_terminated }
      - "assitance_backrent_explain": |
          % if not housing_assistance_previous: 
          ${ 'N/A' } 
          % else: 
          ${ assitance_backrent_explain }
          % endif 
      - "owe_backrent_yes": ${ owe_backrent }
      - "owe_backrent_no": ${ not owe_backrent }
      - "previous_evicted_yes": ${ previous_evicted }
      - "previous_evicted_no": ${ not previous_evicted }
      - "explain_rental_history": | 
          % if not owe_backrent and not previous_evicted : 
          ${ 'N/A' } 
          % else: 
          ${ explain_rental_history }
          % endif 
      - "convicted_yes": ${ convicted_crime }
      - "convicted_no": ${ not convicted_crime }
      - "pending_yes": ${ pending_criminal }
      - "pending_no": ${ not pending_criminal }
      - "sex_offender_yes": ${ sex_offender }
      - "sex_offender_no": ${ not sex_offender }
      - "criminal_record_explination": | 
          % if not sex_offender and not pending_criminal and not convicted_crime : 
          ${ 'N/A' } 
          % else: 
          ${ criminal_record_explination }
          % endif 
      - "user0_signature": ${ users[0].signature if i == 'final' else '' }
      - "signature_date": ${ format_date(signature_date, format='MM/dd/yyyy') }
      - "income1_type": |
          % if cash[0].type == 'Other': 
          ${ cash.item(0).other_type }
          % else: 
          ${ cash.item(0).type }
          % endif 
      - "income2_type": |
          % if cash[1].type == 'Other': 
          ${ cash.item(1).other_type }
          % else: 
          ${ cash.item(1).type }
          % endif 
      - "income3_type": |
          % if cash[2].type == 'Other': 
          ${ cash.item(2).other_type }
          % else: 
          ${ cash.item(2).type }
          % endif 
      - "income4_type": |
          % if cash[3].type == 'Other': 
          ${ cash.item(3).other_type }
          % else: 
          ${ cash.item(3).type }
          % endif 
      - "income5_type": |
          % if cash[4].type == 'Other': 
          ${ cash.item(4).other_type }
          % else: 
          ${ cash.item(4).type }
          % endif 
      - "income6_type": |
          % if cash[5].type == 'Other': 
          ${ cash.item(5).other_type }
          % else: 
          ${ cash.item(5).type }
          % endif 
      - "income7_type": |
          % if cash[6].type == 'Other': 
          ${ cash.item(6).other_type }
          % else: 
          ${ cash.item(6).type }
          % endif 
      - "income8_type": |
          % if cash[7].type == 'Other': 
          ${ cash.item(7).other_type }
          % else: 
          ${ cash.item(7).type }
          % endif 
      - "income9_type": |
          % if cash[8].type == 'Other': 
          ${ cash.item(8).other_type }
          % else: 
          ${ cash.item(8).type }
          % endif 
      - "income10_type": |
          % if cash[9].type == 'Other': 
          ${ cash.item(9).other_type }
          % else: 
          ${ cash.item(9).type } 
          % endif



      
